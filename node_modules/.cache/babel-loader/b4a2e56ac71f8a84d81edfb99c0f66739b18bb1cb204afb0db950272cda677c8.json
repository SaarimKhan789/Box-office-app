{"ast":null,"code":"var _jsxFileName = \"/Users/saarimkhan/Desktop/Box Office App/box-office/Box-office-app/src/pages/Show.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useReducer } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Cast from \"../components/show/Cast\";\nimport Details from \"../components/show/Details\";\nimport Seasons from \"../components/show/Seasons\";\nimport ShowMainData from \"../components/show/ShowMainData\";\nimport { apiGet } from \"../misc/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (prevState, action) => {\n  switch (action.type) {\n    case \"FETCH_SUCCESS\":\n      {\n        return {\n          isLoading: false,\n          error: null,\n          show: action.show\n        };\n      }\n    case \"FETCH_FAILED\":\n      {\n        return {\n          ...prevState,\n          isLoading: false,\n          error: action.error\n        };\n      }\n    default:\n      return prevState;\n  }\n};\nconst intialState = {\n  show: null,\n  isLoading: true,\n  error: null\n};\nconst Show = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [{\n    show,\n    isLoading,\n    error\n  }, dispatch] = useReducer(reducer, intialState);\n  useEffect(() => {\n    let isMounted = true;\n    apiGet(`/shows/${id}?embed[]=seasons&embed[]=cast`).then(results => {\n      if (isMounted) {\n        dispatch({\n          type: \"FETCH_SUCCESS,\",\n          show: results\n        });\n      }\n    }).catch(err => {\n      if (isMounted) {\n        dispatch({\n          type: \"FETCH_FAILED,\",\n          error: err.message\n        });\n      }\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, [id]);\n  console.log(\"show\", show);\n  //   if (isLoading) {\n  //     return <div>Data is being Loaded</div>;\n  //   }\n  //   if (error) {\n  //     return <div>Error occured:{error}</div>;\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ShowMainData, {\n      image: show.image,\n      name: show.name,\n      rating: show.rating,\n      summary: show.summary,\n      tags: show.genres\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Details, {\n        status: show.status,\n        network: show.network,\n        premiered: show.premiered\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Seasons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Seasons, {\n        seasons: show.embedded.seasons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Cast, {\n        cast: show.embedded.cast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Show, \"8J5UqtNfB15XI6NzGjHNl5/eYdQ=\", false, function () {\n  return [useParams];\n});\n_c = Show;\nexport default Show;\nvar _c;\n$RefreshReg$(_c, \"Show\");","map":{"version":3,"names":["React","useEffect","useReducer","useParams","Cast","Details","Seasons","ShowMainData","apiGet","reducer","prevState","action","type","isLoading","error","show","intialState","Show","id","dispatch","isMounted","then","results","catch","err","message","console","log","image","name","rating","summary","genres","status","network","premiered","embedded","seasons","cast"],"sources":["/Users/saarimkhan/Desktop/Box Office App/box-office/Box-office-app/src/pages/Show.js"],"sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Cast from \"../components/show/Cast\";\nimport Details from \"../components/show/Details\";\nimport Seasons from \"../components/show/Seasons\";\nimport ShowMainData from \"../components/show/ShowMainData\";\nimport { apiGet } from \"../misc/config\";\n\nconst reducer = (prevState, action) => {\n  switch (action.type) {\n    case \"FETCH_SUCCESS\": {\n      return { isLoading: false, error: null, show: action.show };\n    }\n    case \"FETCH_FAILED\": {\n      return { ...prevState, isLoading: false, error: action.error };\n    }\n\n    default:\n      return prevState;\n  }\n};\n\nconst intialState = {\n  show: null,\n  isLoading: true,\n  error: null,\n};\n\nconst Show = () => {\n  const { id } = useParams();\n\n  const [{ show, isLoading, error }, dispatch] = useReducer(\n    reducer,\n    intialState\n  );\n\n  useEffect(() => {\n    let isMounted = true;\n\n    apiGet(`/shows/${id}?embed[]=seasons&embed[]=cast`)\n      .then((results) => {\n        if (isMounted) {\n          dispatch({ type: \"FETCH_SUCCESS,\", show: results });\n        }\n      })\n      .catch((err) => {\n        if (isMounted) {\n          dispatch({ type: \"FETCH_FAILED,\", error: err.message });\n        }\n      });\n\n    return () => {\n      isMounted = false;\n    };\n  }, [id]);\n\n  console.log(\"show\", show);\n  //   if (isLoading) {\n  //     return <div>Data is being Loaded</div>;\n  //   }\n  //   if (error) {\n  //     return <div>Error occured:{error}</div>;\n  //   }\n\n  return (\n    <div>\n      <ShowMainData\n        image={show.image}\n        name={show.name}\n        rating={show.rating}\n        summary={show.summary}\n        tags={show.genres}\n      />\n      <div>\n        <h2>Details</h2>\n        <Details\n          status={show.status}\n          network={show.network}\n          premiered={show.premiered}\n        />\n      </div>\n\n      <div>\n        <h2>Seasons</h2>\n        <Seasons seasons={show.embedded.seasons} />\n      </div>\n\n      <div>\n        <h2>Cast</h2>\n        <Cast cast={show.embedded.cast} />\n      </div>\n    </div>\n  );\n};\n\nexport default Show;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}