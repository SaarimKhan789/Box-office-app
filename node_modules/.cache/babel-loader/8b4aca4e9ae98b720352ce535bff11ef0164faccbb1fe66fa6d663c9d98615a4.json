{"ast":null,"code":"var _jsxFileName = \"/Users/saarimkhan/Desktop/Box Office App/Box-office-app/src/components/actor/ActorGrid.js\";\nimport React from \"react\";\nimport ActorCard from \"./ActorCard\";\nimport IMAGE_NOT_FOUND from \"../../images/notfound.png\";\nimport { FlexGrid } from \"../styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActorGrid = _ref => {\n  let {\n    data\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(FlexGrid, {\n    children: data.map(_ref2 => {\n      let {\n        person\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(ActorCard, {\n        name: person.name,\n        country: person.country ? person.country.name : null,\n        birthday: person.birthday,\n        deathday: person.deathday,\n        gender: person.gender,\n        image: person.image ? person.image.medium : IMAGE_NOT_FOUND\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = ActorGrid;\nexport default ActorGrid;\nvar _c;\n$RefreshReg$(_c, \"ActorGrid\");","map":{"version":3,"names":["React","ActorCard","IMAGE_NOT_FOUND","FlexGrid","ActorGrid","data","map","person","name","country","birthday","deathday","gender","image","medium","id"],"sources":["/Users/saarimkhan/Desktop/Box Office App/Box-office-app/src/components/actor/ActorGrid.js"],"sourcesContent":["import React from \"react\";\nimport ActorCard from \"./ActorCard\";\nimport IMAGE_NOT_FOUND from \"../../images/notfound.png\";\nimport { FlexGrid } from \"../styled\";\nconst ActorGrid = ({ data }) => {\n  return (\n    <FlexGrid>\n      {data.map(({ person }) => (\n        <ActorCard\n          key={person.id}\n          name={person.name}\n          country={person.country ? person.country.name : null}\n          birthday={person.birthday}\n          deathday={person.deathday}\n          gender={person.gender}\n          image={person.image ? person.image.medium : IMAGE_NOT_FOUND}\n        />\n      ))}\n    </FlexGrid>\n  );\n};\n\nexport default ActorGrid;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AACvD,SAASC,QAAQ,QAAQ,WAAW;AAAC;AACrC,MAAMC,SAAS,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAK,CAAC;EACzB,oBACE,QAAC,QAAQ;IAAA,UACNA,IAAI,CAACC,GAAG,CAAC;MAAA,IAAC;QAAEC;MAAO,CAAC;MAAA,oBACnB,QAAC,SAAS;QAER,IAAI,EAAEA,MAAM,CAACC,IAAK;QAClB,OAAO,EAAED,MAAM,CAACE,OAAO,GAAGF,MAAM,CAACE,OAAO,CAACD,IAAI,GAAG,IAAK;QACrD,QAAQ,EAAED,MAAM,CAACG,QAAS;QAC1B,QAAQ,EAAEH,MAAM,CAACI,QAAS;QAC1B,MAAM,EAAEJ,MAAM,CAACK,MAAO;QACtB,KAAK,EAAEL,MAAM,CAACM,KAAK,GAAGN,MAAM,CAACM,KAAK,CAACC,MAAM,GAAGZ;MAAgB,GANvDK,MAAM,CAACQ,EAAE;QAAA;QAAA;QAAA;MAAA,QAOd;IAAA,CACH;EAAC;IAAA;IAAA;IAAA;EAAA,QACO;AAEf,CAAC;AAAC,KAhBIX,SAAS;AAkBf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}